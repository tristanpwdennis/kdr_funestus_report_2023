library(patchwork)
listofheatmaps[[1]]+scale_x_discrete(labels = "2022\n n=28")+
listofheatmaps[[2]]+theme(axis.text.y = element_blank(), axis.title.y = element_blank())+scale_x_discrete(labels = "2022\n n=32")+
listofheatmaps[[3]]+theme(axis.text.y = element_blank(), axis.title.y = element_blank())+scale_x_discrete(labels = "2022\n n=30")+
listofheatmaps[[4]]+theme(axis.text.y = element_blank(), axis.title.y = element_blank())+scale_x_discrete(labels = c("2017\n n=10","2019\n n=18","2021\n n=9","2023\n n=27"))+
listofheatmaps[[5]]+theme(axis.text.y = element_blank(), axis.title.y = element_blank())+scale_x_discrete(labels = "2022\n n=31")+
listofheatmaps[[6]]+theme(axis.text.y = element_blank(), axis.title.y = element_blank())+scale_x_discrete(labels = "2022\n n=28")+
listofheatmaps[[7]]+theme(axis.text.y = element_blank(), axis.title.y = element_blank())+scale_x_discrete(labels = "2019\n n=10")+
listofheatmaps[[8]]+theme(axis.text.y = element_blank(), axis.title.y = element_blank())+scale_x_discrete(labels = c("2019\n n=9","2022\n n=28"))+
listofheatmaps[[9]]+theme(axis.text.y = element_blank(), axis.title.y = element_blank())+scale_x_discrete(labels = "2022\n n=32")+
listofheatmaps[[10]]+theme(axis.text.y = element_blank(), axis.title.y = element_blank())+scale_x_discrete(labels = "2022\n n=33")+
plot_layout(widths =  c(1.2,1.2,1.2,4,1.2,1.2,1.2,2,1,1))
df_samples %>% count(admin1_name)
df_samples %>% count(sample_set)
cowplot::plot_grid(
listofheatmaps[[1]]+theme(axis.text.y = element_blank(), axis.title.y = element_blank()),
listofheatmaps[[2]]+theme(axis.text.y = element_blank(), axis.title.y = element_blank()),
listofheatmaps[[3]]+theme(axis.text.y = element_blank(), axis.title.y = element_blank()),
listofheatmaps[[4]]+theme(axis.text.y = element_blank(), axis.title.y = element_blank()),
listofheatmaps[[5]]+theme(axis.text.y = element_blank(), axis.title.y = element_blank()),
listofheatmaps[[6]]+theme(axis.text.y = element_blank(), axis.title.y = element_blank()),
listofheatmaps[[7]]+theme(axis.text.y = element_blank(), axis.title.y = element_blank()),
nrow=1,
rel_widths = c(1.2,1.2,1.2,4,1.2,1.2,1.2),
labels = c('DO','KA','LI','MO','MT','MW','PW'),
align = "v")
#Now let's take a look at ld
labels <- c('I2030V (44,115,564)','G1962V (44,115,768)','P1842S (44,116,128)','N1773S (44,116,334)','F1638Y (44,116,923)','W1557R (44,117,167)','G1144C (44,122,391)','L976F (44,125,475)')
ldmat <- read.csv('~/Projects/kdr_funestus_report_2023/data/kdrld.csv', header = FALSE)
colnames(ldmat) <- labels
ldmat$snp2 <- labels
ldmat %>% pivot_longer(cols = 1:8) %>%
ggplot(aes(x=name, y=snp2, fill=value))+
geom_tile(colour='white', linewidth=3)+
scale_fill_gradientn(colours = c("#fee0d2", '#fc9272','#de2d26'), breaks = c(0,0.5,1), limits = c(-0.1,0.99))+
geom_text(aes(label=round(value, digits = 2)), color = "#636363", size = 4, fontface = "bold") +
theme_bw()+
labs(fill = 'Rogers and Huff R')+
theme(
axis.title.x = element_blank(),
axis.title.y=element_blank(),
axis.text.x = element_text(size=15,face="bold",angle = 45,hjust=1),
axis.text.y = element_text(size=15,face="bold",angle = 45, vjust = 0.1, hjust=1))
View(prediction976Delta)
View(prediction976Delta)
ldmat %>% pivot_longer(cols = 1:8) %>%
ggplot(aes(x=name, y=snp2, fill=value))+
geom_tile(colour='white', linewidth=3)+
scale_fill_gradientn(colours = c("#d0d1e6", '#74a9cf','#045a8d'), breaks = c(0,0.5,1), limits = c(-0.1,0.99))+
geom_text(aes(label=round(value, digits = 2)), color = "#636363", size = 4, fontface = "bold") +
theme_bw()+
labs(fill = 'Rogers and Huff R')+
theme(
axis.title.x = element_blank(),
axis.title.y=element_blank(),
axis.text.x = element_text(size=15,face="bold",angle = 45,hjust=1),
axis.text.y = element_text(size=15,face="bold",angle = 45, vjust = 0.1, hjust=1))
ldmat %>% pivot_longer(cols = 1:8) %>%
ggplot(aes(x=name, y=snp2, fill=value))+
geom_tile(colour='white', linewidth=3)+
scale_fill_gradientn(colours = c("#d0d1e6", '#74a9cf','#2b8cbe'), breaks = c(0,0.5,1), limits = c(-0.1,0.99))+
geom_text(aes(label=round(value, digits = 2)), color = "#636363", size = 4, fontface = "bold") +
theme_bw()+
labs(fill = 'Rogers and Huff R')+
theme(
axis.title.x = element_blank(),
axis.title.y=element_blank(),
axis.text.x = element_text(size=15,face="bold",angle = 45,hjust=1),
axis.text.y = element_text(size=15,face="bold",angle = 45, vjust = 0.1, hjust=1))
ldmat
labels
#Now let's take a look at ld
labels <- c('I2030V','G1962V','P1842S','N1773S','F1638Y','W1557R','G1144C','L976F')
ldmat <- read.csv('~/Projects/kdr_funestus_report_2023/data/kdrld.csv', header = FALSE)
colnames(ldmat) <- labels
ldmat$snp2 <- labels
ldmat %>% pivot_longer(cols = 1:8) %>%
ggplot(aes(x=name, y=snp2, fill=value))+
geom_tile(colour='white', linewidth=3)+
scale_fill_gradientn(colours = c("#d0d1e6", '#74a9cf','#2b8cbe'), breaks = c(0,0.5,1), limits = c(-0.1,0.99))+
geom_text(aes(label=round(value, digits = 2)), color = "#636363", size = 4, fontface = "bold") +
theme_bw()+
labs(fill = 'Rogers and Huff R')+
theme(
axis.title.x = element_blank(),
axis.title.y=element_blank(),
axis.text.x = element_text(size=15,face="bold",angle = 45,hjust=1),
axis.text.y = element_text(size=15,face="bold",angle = 45, vjust = 0.1, hjust=1))
ldmat %>% pivot_longer(cols = 1:8) %>%
ggplot(aes(x=name, y=snp2, fill=value))+
geom_tile(colour='white', linewidth=3)+
scale_fill_gradientn(colours = c("#d0d1e6", '#74a9cf','#2b8cbe'), breaks = c(0,0.5,1), limits = c(-0.1,0.99))+
geom_text(aes(label=round(value, digits = 2)), color = "#636363", size = 4, fontface = "bold") +
theme_bw()+
labs(fill = 'Rogers and Huff R')+
theme(
axis.title.x = element_blank(),
axis.title.y=element_blank(),
legend.position = "none",
axis.text.x = element_text(size=15,face="bold",angle = 45,hjust=1),
axis.text.y = element_text(size=15,face="bold",angle = 45, vjust = 0.1, hjust=1))
cowplot::plot_grid(
listofheatmaps[[1]]+theme(axis.text.y = element_blank(), axis.title.y = element_blank()),
listofheatmaps[[2]]+theme(axis.text.y = element_blank(), axis.title.y = element_blank()),
listofheatmaps[[3]]+theme(axis.text.y = element_blank(), axis.title.y = element_blank()),
listofheatmaps[[4]]+theme(axis.text.y = element_blank(), axis.title.y = element_blank()),
listofheatmaps[[5]]+theme(axis.text.y = element_blank(), axis.title.y = element_blank()),
listofheatmaps[[6]]+theme(axis.text.y = element_blank(), axis.title.y = element_blank()),
listofheatmaps[[7]]+theme(axis.text.y = element_blank(), axis.title.y = element_blank()),
nrow=1,
rel_widths = c(1.2,1.2,1.2,4,1.2,1.2,1.2),
labels = c('DO','KA','LI','MO','MT','MW','PW'),
align = "v")
plotheatmap <- function(admin){
#plot initial heatmap to get labs and legend
ggplot(df_freqs_2[df_freqs_2$admin1_name == admin,], aes(y=label, x=as.factor(year), fill=value))+
geom_tile(colour='white', linewidth=3)+
scale_fill_gradientn(colours = c("#d0d1e6", '#74a9cf','#2b8cbe'), breaks = c(0,0.5,1), limits = c(-0.1,0.99))+
geom_text(aes(label=round(value, digits = 2)), color = "#636363", size = 4, fontface = "bold") +
theme_bw()+
facet_grid(~admin1_name)+
theme(legend.position = "none",
axis.title.x = element_blank(),
axis.title.y=element_blank(),
axis.text.x = element_text(size=15,face="bold"),
axis.text.y=element_text(size=15,face="bold"),
strip.text.x = element_text(size=15,face="bold"),
plot.margin = margin(r = 0.1, l = 0.1))
#axis.text.y = element_blank())
}
listofheatmaps <- lapply(unique(df_freqs_2$admin1_name), plotheatmap)
library(patchwork)
listofheatmaps[[1]]+scale_x_discrete(labels = "2022\n n=28")+
listofheatmaps[[2]]+theme(axis.text.y = element_blank(), axis.title.y = element_blank())+scale_x_discrete(labels = "2022\n n=32")+
listofheatmaps[[3]]+theme(axis.text.y = element_blank(), axis.title.y = element_blank())+scale_x_discrete(labels = "2022\n n=30")+
listofheatmaps[[4]]+theme(axis.text.y = element_blank(), axis.title.y = element_blank())+scale_x_discrete(labels = c("2017\n n=10","2019\n n=18","2021\n n=9","2023\n n=27"))+
listofheatmaps[[5]]+theme(axis.text.y = element_blank(), axis.title.y = element_blank())+scale_x_discrete(labels = "2022\n n=31")+
listofheatmaps[[6]]+theme(axis.text.y = element_blank(), axis.title.y = element_blank())+scale_x_discrete(labels = "2022\n n=28")+
listofheatmaps[[7]]+theme(axis.text.y = element_blank(), axis.title.y = element_blank())+scale_x_discrete(labels = "2019\n n=10")+
listofheatmaps[[8]]+theme(axis.text.y = element_blank(), axis.title.y = element_blank())+scale_x_discrete(labels = c("2019\n n=9","2022\n n=28"))+
listofheatmaps[[9]]+theme(axis.text.y = element_blank(), axis.title.y = element_blank())+scale_x_discrete(labels = "2022\n n=32")+
listofheatmaps[[10]]+theme(axis.text.y = element_blank(), axis.title.y = element_blank())+scale_x_discrete(labels = "2022\n n=33")+
plot_layout(widths =  c(1.2,1.2,1.2,4,1.2,1.2,1.2,2,1,1))
ggplot(NULL, aes())+
geom_pointrange(data =mutdf, aes(x=x,y=predicted, ymin=conf.low,ymax=conf.high, colour=Mutation, shape=insec),position = position_dodge(width=0.2), size=1)+
#ggtitle("DDT") +
xlab(bquote('P1842S')) +
ylab(bquote('Mortality')) +
ylim(0,1) +
labs(colour='Mutation',)+
scale_colour_manual(values=c("#2ca25f","#2b8cbe"))+
theme_classic(base_family='Arial', base_size = 18)+
facet_grid(cols=vars(Mutation))+
theme(strip.text.x = element_blank(),
plot.title = element_text(size=30),
axis.title.x = element_blank(),
legend.position = "bottom",
axis.line = element_blank(),
)+
labs(shape="Insecticide")+
ggtitle("D")
af <- fread("~/Projects/kdr_funestus_report_2023/tables/kdr_freqs.csv", header = TRUE)
s <- af %>% pivot_longer(cols = 2:5)
aflplot <- s %>% filter(V1 != 'W1557R') %>%
pivot_wider(names_from = val) %>%
ggplot(aes())+
geom_pointrange(aes(x=name,y=freq, ymin=ci_low,ymax=ci_up, colour=V1))+
geom_line(aes(x=name,y=freq, group=V1, colour=V1))+
theme_classic()+
scale_colour_manual(values=c("#2ca25f","#2b8cbe"))+
theme(axis.line = element_blank(),
plot.title = element_text(size=30),
legend.position = "bottom")+
labs(x='Year',y='Frequency', colour='Mutation')+
ggtitle("B")
s
aflplot
aflplot <- s %>% filter(V1 != 'W1557R') %>%
pivot_wider(names_from = val) %>%
ggplot(aes())+
geom_pointrange(aes(x=name,y=freq, ymin=ci_low,ymax=ci_up, colour=V1))+
geom_line(aes(x=name,y=freq, group=V1, colour=V1))+
theme_classic()+
scale_colour_manual(values=c("#2ca25f","#2b8cbe"))+
theme(axis.line = element_blank(),
plot.title = element_text(size=30),
legend.position = "bottom")+
labs(x='Year',y='Frequency', colour='Mutation')+
ggtitle("C")
aflplot
aflplot <- s %>% filter(V1 != 'W1557R') %>%
pivot_wider(names_from = val) %>%
ggplot(aes())+
geom_pointrange(aes(x=name,y=freq, ymin=ci_low,ymax=ci_up, colour=V1))+
geom_line(aes(x=name,y=freq, group=V1, colour=V1))+
theme_classic(base_family='Arial', base_size = 18)+
scale_colour_manual(values=c("#2ca25f","#2b8cbe"))+
theme(axis.line = element_blank(),
plot.title = element_text(size=30),
legend.position = "bottom")+
labs(x='Year',y='Frequency', colour='Mutation')+
ggtitle("C")
aflplot
tplot <- ggplot(NULL, aes())+
geom_pointrange(data =mutdf, aes(x=x,y=predicted, ymin=conf.low,ymax=conf.high, colour=Mutation, shape=insec),position = position_dodge(width=0.2), size=1)+
#ggtitle("DDT") +
xlab(bquote('P1842S')) +
ylab(bquote('Mortality')) +
ylim(0,1) +
labs(colour='Mutation',)+
scale_colour_manual(values=c("#2ca25f","#2b8cbe"))+
theme_classic(base_family='Arial', base_size = 18)+
facet_grid(cols=vars(Mutation))+
theme(strip.text.x = element_blank(),
plot.title = element_text(size=30),
axis.title.x = element_blank(),
legend.position = "bottom",
axis.line = element_blank(),
)+
labs(shape="Insecticide")+
ggtitle("D")
cowplot::plot_grid(aflplot, tplot)
ggsave(plot=aflplot+theme(legend.position = "none"), filename = "~/Projects/kdr_funestus_report_2023/figures/frefig.tiff", device = 'tiff', width = 5, height = 5, units = "in")
cowplot::plot_grid(aflplot+theme(legend.position = "none"), tplot)
cowplot::plot_grid(aflplot+theme(legend.position = "none"), tplot+theme(legend.position = "right"))
aflplot <- s %>% filter(V1 != 'W1557R') %>%
pivot_wider(names_from = val) %>%
ggplot(aes())+
geom_pointrange(aes(x=name,y=freq, ymin=ci_low,ymax=ci_up, colour=V1))+
geom_line(aes(x=name,y=freq, group=V1, colour=V1))+
theme_classic(base_family='Arial', base_size = 18)+
scale_colour_manual(values=c("#2ca25f","#2b8cbe"))+
theme(axis.line = element_blank(),
plot.title = element_text(size=30),
legend.position = "bottom")+
labs(x='Year',y='Frequency', colour='Mutation')+
ggtitle("B")
tplot <- ggplot(NULL, aes())+
geom_pointrange(data =mutdf, aes(x=x,y=predicted, ymin=conf.low,ymax=conf.high, colour=Mutation, shape=insec),position = position_dodge(width=0.2), size=1)+
#ggtitle("DDT") +
xlab(bquote('P1842S')) +
ylab(bquote('Mortality')) +
ylim(0,1) +
labs(colour='Mutation',)+
scale_colour_manual(values=c("#2ca25f","#2b8cbe"))+
theme_classic(base_family='Arial', base_size = 18)+
facet_grid(cols=vars(Mutation))+
theme(strip.text.x = element_blank(),
plot.title = element_text(size=30),
axis.title.x = element_blank(),
legend.position = "bottom",
axis.line = element_blank(),
)+
labs(shape="Insecticide")+
ggtitle("C")
cowplot::plot_grid(aflplot+theme(legend.position = "none"), tplot+theme(legend.position = "right"))
plotheatmap <- function(admin){
#plot initial heatmap to get labs and legend
ggplot(df_freqs_2[df_freqs_2$admin1_name == admin,], aes(y=label, x=as.factor(year), fill=value))+
geom_tile(colour='white', linewidth=0)+
scale_fill_gradientn(colours = c("#f7fbff", '#9ecae1','#4292c6'), breaks = c(0,0.5,1), limits = c(0,1))+
geom_text(aes(label=round(value, digits = 2)), color = "#08306b", size = 4, fontface = "bold") +
theme_classic()+
facet_grid(~admin1_name)+
theme(legend.position = "none",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.line = element_blank(),
axis.text.x = element_text(size=15,face="bold"),
axis.text.y=element_text(size=15,face="bold"),
strip.text.x = element_text(size=15,face="bold"),
panel.border = element_blank(),
panel.grid.minor = element_blank(),
panel.spacing = element_blank(),
plot.margin = margin(r = 0.05, l = 0.05))
#axis.text.y = element_blank())
}
listofheatmaps <- lapply(unique(df_freqs_2$admin1_name), plotheatmap)
#have had to wrangle this to get a multipanelled heatmap without faffing around in inkscape
library(patchwork)
heatmaplot <-
listofheatmaps[[2]]+scale_x_discrete(labels = "2022\n n=32")+  ggtitle("A")+ theme(plot.title = element_text(size=30))+
listofheatmaps[[6]]+theme(axis.text.y = element_blank(), axis.title.y = element_blank())+scale_x_discrete(labels = "2022\n n=28")+
listofheatmaps[[9]]+theme(axis.text.y = element_blank(), axis.title.y = element_blank())+scale_x_discrete(labels = "2022\n n=32")+
listofheatmaps[[1]]+scale_x_discrete(labels = "2022\n n=28")+theme(axis.text.y = element_blank(), axis.title.y = element_blank())+
listofheatmaps[[10]]+theme(axis.text.y = element_blank(), axis.title.y = element_blank())+scale_x_discrete(labels = "2022\n n=33")+
listofheatmaps[[7]]+theme(axis.text.y = element_blank(), axis.title.y = element_blank())+scale_x_discrete(labels = "2019\n n=10")+
listofheatmaps[[4]]+theme(axis.text.y = element_blank(), axis.title.y = element_blank())+scale_x_discrete(labels = c("2017\n n=10","2019\n n=18","2021\n n=9","2023\n n=27"))+
listofheatmaps[[3]]+theme(axis.text.y = element_blank(), axis.title.y = element_blank())+scale_x_discrete(labels = "2022\n n=30")+
listofheatmaps[[5]]+theme(axis.text.y = element_blank(), axis.title.y = element_blank())+scale_x_discrete(labels = "2022\n n=31")+
listofheatmaps[[8]]+theme(axis.text.y = element_blank(), axis.title.y = element_blank())+scale_x_discrete(labels = c("2019\n n=9","2022\n n=28"))+
plot_layout(widths =  c(1.2,1.2,1.2,1.2,1.2,1.2,4,1.2,1.2,2))
heatmaplot
#get matrix labels sorted
headerlabs <- rev(c('snp2','L976F','G1144C','W1557R','F1638Y','N1773S','P1842S','G1962C','I2030V'))
snp2labs <- rev(c('L976F','G1144C','W1557R','F1638Y','N1773S','P1842S','G1962C','I2030V'))
ldmat <- read.csv('~/Projects/kdr_funestus_report_2023/data/kdrld.csv', header = FALSE)
ldmat$snp2 <- snp2labs
colnames(ldmat) <- headerlabs
snp2labs
#pivot to longfdorm df for plotting
lddf <- ldmat %>% pivot_longer(cols = 1:8)
lddf$snp2 <- factor(lddf$snp2, levels = snp2labs)
lddf$name <- factor(lddf$name, levels = snp2labs)
ldfig <- lddf %>%
ggplot(aes(x=name, y=snp2, fill=value))+
geom_tile(colour='white', linewidth=0)+
scale_fill_gradientn(colours = c("#f7fbff", '#9ecae1','#4292c6'), breaks = c(0,0.5,1), limits = c(-0.1,0.99))+
geom_text(aes(label=round(value, digits = 2)), color = "#08306b", size = 4, fontface = "bold") +
scale_y_discrete(position = "right")+
theme_classic()+
labs(fill = 'Rogers and Huff R')+
theme(legend.position = "none",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
plot.title = element_text(size=30),
axis.line = element_blank(),
strip.text.x = element_text(size=15,face="bold"),
panel.border = element_blank(),
panel.grid.minor = element_blank(),
panel.spacing = element_blank(),
plot.margin = margin(r = 0.1, l = 0.1),
axis.text.x = element_text(size=15,face="bold",angle = 90,hjust=1),
axis.text.y = element_text(size=15,face="bold",angle = 0, vjust = 0.1, hjust=1))+
ggtitle("C")
ldfig
ldfig <- lddf %>%
ggplot(aes(x=name, y=snp2, fill=value))+
geom_tile(colour='white', linewidth=0)+
scale_fill_gradientn(colours = c("#f7fbff", '#9ecae1','#4292c6'), breaks = c(0,0.5,1), limits = c(-0.1,0.99))+
geom_text(aes(label=round(value, digits = 2)), color = "#08306b", size = 4, fontface = "bold") +
scale_y_discrete(position = "right")+
theme_classic()+
labs(fill = 'Rogers and Huff R')+
theme(legend.position = "none",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
plot.title = element_text(size=30),
axis.line = element_blank(),
strip.text.x = element_text(size=15,face="bold"),
panel.border = element_blank(),
panel.grid.minor = element_blank(),
panel.spacing = element_blank(),
plot.margin = margin(r = 0.1, l = 0.1),
axis.text.x = element_text(size=15,face="bold",angle = 90,hjust=1),
axis.text.y = element_text(size=15,face="bold",angle = 0, vjust = 0.1, hjust=1))+
ggtitle("D")
ldfig
df_samples <- fread('/Users/dennistpw/Projects/funestus_tz/tzsamples.csv')
dir = '/Users/dennistpw/Projects/funestus_tz/admixture/4857.TZ//'
fhand = '2RL.50000.0.05.0.0.TZ.'
admixoutput = list()
i = 0
for (a in seq(1,9)) {
i<-i+1
pf = paste0(dir, fhand, a, '.P')
qf = paste0(dir, fhand, a, '.Q')
lf = paste0(dir,'log',a,'.out')
my_admix <- loadAdmixture(qf, pf, lf)
admixoutput[[i]] <-  my_admix
}
#plot nice map and table for kdr sample counts
#tristan dennis 22.11.23
#######
library(tidyverse)
library(sf)
library(RColorBrewer)
library("ggrepel")
library("ggspatial")
library("ggsci")
library("data.table")
library(starmie)
library(conStruct)
#read sample information (this is )
df_samples = read.csv('~/Projects/funestus_tz/easamples.csv')
df_samples <- fread('/Users/dennistpw/Projects/funestus_tz/tzsamples.csv')
dir = '/Users/dennistpw/Projects/funestus_tz/admixture/4857.TZ//'
fhand = '2RL.50000.0.05.0.0.TZ.'
admixoutput = list()
i = 0
for (a in seq(1,9)) {
i<-i+1
pf = paste0(dir, fhand, a, '.P')
qf = paste0(dir, fhand, a, '.Q')
lf = paste0(dir,'log',a,'.out')
my_admix <- loadAdmixture(qf, pf, lf)
admixoutput[[i]] <-  my_admix
}
#turn into admixture object multi
#plot cv diagnostics
admixlist_all = starmie::admixList(admixoutput)
bestK(admixlist_all)
starmie::plotMultiK(admixlist_all, populations = df_samples[,c('V1','admin1_name')], plot = TRUE)
starmie::plotMultiK(admixlist_all, populations = df_samples[,c('V1','admin1_name')], plot = TRUE)
#plot best (3) k
starmie::plotBar(admixlist_all[[3]])
#plot best (3) k
starmie::plotBar(admixlist_all[[3]], populations = df_samples[,c('V1','admin1_name')], plot = TRUE)
?starmie::plotBar
admixlist_all[3]
#plot best (3) k
starmie::plotBar(admixlist_all[3], populations = df_samples[,c('V1','admin1_name')], plot = TRUE)
#plot nice map and table for kdr sample counts
#tristan dennis 22.11.23
#######
library(tidyverse)
library(sf)
library(RColorBrewer)
library("ggrepel")
library("ggspatial")
library("ggsci")
library("data.table")
library(starmie)
library(conStruct)
#read sample information (this is )
df_samples = read.csv('~/Projects/funestus_tz/easamples.csv')
#load shapefiles
gridshp = st_read('~/software/feems/feems/feems/data/grid_100.shp')
admin_shape = st_read("~/Projects/cease/cease_wp1c/analysis_data/raster/ne_10m_admin_1_states_provinces/ne_10m_admin_1_states_provinces.shp")
border_shape = st_read("~/Projects/cease/cease_wp1c/analysis_data/raster/ne_10m_admin_0_sovereignty/ne_10m_admin_0_sovereignty.shp")
river_shape = st_read("~/Projects/cease/cease_wp1c/analysis_data/raster/ne_50m_rivers_lake_centerlines/ne_50m_rivers_lake_centerlines.shp")
lake = st_read("~/Projects/cease/cease_wp1c/analysis_data/raster//ne_50m_lakes/ne_50m_lakes.shp")
city_shape = st_read("~/Projects/cease/cease_wp1c/analysis_data/raster/ne_50m_populated_places/ne_50m_populated_places.shp")
ocean_shape = st_read("~/Projects/cease/cease_wp1c/analysis_data/raster/ne_50m_ocean/ne_50m_ocean.shp")
urban_shape = st_read("~/Projects/cease/cease_wp1c/analysis_data/raster/ne_50m_urban_areas/ne_50m_urban_areas.shp")
#plot map
tzdf <- df_samples %>% count(cohort_admin1_year, admin1_name, longitude, latitude)
map <- ggplot()+
geom_sf(data = border_shape, fill = ifelse(border_shape$ADM0_A3 == "TZA", gray(0.98), gray(0.85)),col =gray(0.7)) + # geom_sf(data=st_geometry(river_shape), colour = '#4a80f5', fill='#9bbff4', alpha=0.7)+
#  geom_sf(data=st_geometry(ocean_shape), colour = '#4a80f5', fill='#9bbff4')+
geom_sf(data=st_geometry(lake),colour = '#4a80f5', fill='#9bbff4')+
geom_point(data=tzdf, aes(x=as.numeric(longitude), y=as.numeric(latitude)),  alpha = 0.6, size=4)+#colour=query))+#size=sequenced_count))+
#geom_point(data = X, aes(x = LONGITUDE, y = LATITUDE))+
#geom_text_repel(data = X, aes(x = LONGITUDE, y = LATITUDE, label = NAME), fontface = "bold", min.segment.length = 0.4, max.overlaps = 1000)+
#geom_text_repel(data = tzdf, aes(x = longitude, y = latitude, label = cohort_admin1_year), fontface = "bold", min.segment.length = 0.4, max.overlaps = 1000)+
#scale_colour_manual(values = countrycols)+
xlim(20, 45)+
ylim(-20,5)+
labs(x="Longitude", y="Latitude", colour='Admin1')+
theme_minimal()+
annotation_scale(location = "bl", width_hint = 0.5) +
labs(x = "Longitude", y = "Latitude", colour="Collection Admin1 Region") +
theme_bw() +
scale_color_brewer(palette = "Paired")+
theme(panel.background = element_rect(fill = "#9bbff4"),
panel.grid.major = element_line(colour = gray(0.5), linetype = "dashed"),
panel.border = element_rect(fill = NA),
axis.text = element_text(size = 10),
axis.title = element_text(size = 14, face = "bold"),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
#legend.position = "bottom",
legend.text = element_text(size = 11),
legend.title = element_text(size = 13, face = "bold")) +
guides(fill = guide_legend(title = "Country", override.aes = list(size = 5)))
map
df_samples <- fread('/Users/dennistpw/Projects/funestus_tz/tzsamples.csv')
dir = '/Users/dennistpw/Projects/funestus_tz/admixture/4857.TZ//'
fhand = '2RL.50000.0.05.0.0.TZ.'
admixoutput = list()
i = 0
for (a in seq(1,9)) {
i<-i+1
pf = paste0(dir, fhand, a, '.P')
qf = paste0(dir, fhand, a, '.Q')
lf = paste0(dir,'log',a,'.out')
my_admix <- loadAdmixture(qf, pf, lf)
admixoutput[[i]] <-  my_admix
}
#turn into admixture object multi
#plot cv diagnostics
admixlist_all = starmie::admixList(admixoutput)
bestK(admixlist_all)
#plot all K
starmie::plotMultiK(admixlist_all, populations = df_samples[,c('V1','admin1_name')], plot = TRUE)
#plot best (3) k
starmie::plotBar(admixlist_all[3], populations = df_samples[,c('V1','admin1_name')], plot = TRUE)
#plot best (3) k
starmie::plotBar(admixlist_all[3], plot = TRUE)
df_samples[,c('V1','admin1_name')]
admixlist_all[3]
#plot best (3) k
starmie::plotBar(admixlist_all[3], plot = TRUE, facet = FALSE)
populations = df_samples[,c('V1','admin1_name')]
View(populations)
#plot best (3) k
starmie::plotBar(admixlist_all[3], plot = TRUE, facet = FALSE, populations = populations)
admixlist_all[3]
#plot best (3) k
starmie::plotBar(admixlist_all[3], plot = TRUE, facet = FALSE, populations = populations = df_samples[,c('V1','admin1_name')])
#plot best (3) k
starmie::plotBar(admixlist_all[3], plot = TRUE, facet = FALSE, populations  = df_samples[,c('V1','admin1_name')])
loadAdmixture('/Users/dennistpw/Projects/funestus_tz/admixture/4857.TZ/2RL.50000.0.05.0.0.TZ.3.Q')
loadAdmixture(qfile = '/Users/dennistpw/Projects/funestus_tz/admixture/4857.TZ/2RL.50000.0.05.0.0.TZ.3.Q', pfile = '/Users/dennistpw/Projects/funestus_tz/admixture/4857.TZ/2RL.50000.0.05.0.0.TZ.3.P')
k3 = loadAdmixture(qfile = '/Users/dennistpw/Projects/funestus_tz/admixture/4857.TZ/2RL.50000.0.05.0.0.TZ.3.Q', pfile = '/Users/dennistpw/Projects/funestus_tz/admixture/4857.TZ/2RL.50000.0.05.0.0.TZ.3.P')
plotBar(k3)
plotBar(k3, populations = df_samples[,c('V1','admin1_name')])
bestK(admixlist_all)
admixlist_all[1:6]
#plot all K
starmie::plotMultiK(admixlist_all[1:6], populations = df_samples[,c('V1','admin1_name')], plot = TRUE)
#plot all K for the first six or so
starmie::plotMultiK(admixlist_all[2:6], populations = df_samples[,c('V1','admin1_name')], plot = TRUE)
#plot all K for K2-6
starmie::plotMultiK(admixlist_all[3:4], populations = df_samples[,c('V1','admin1_name')], plot = TRUE)
map
